pragma solidity ^0.4.14;
contract Payroll{
    uint salary;
    address frank;
    uint constant payDuration=10 seconds;
    uint lastPayDay=now;
    
    function addFund() payable returns (uint) {
        return this.balance;
    }
    function identifyAddress (){
    if(frank==0xca35b7d915458ef540ade6068dfe2f44e8fa733c){
        salary=1 ether;
    }else if(frank==0x4b0897b0513fdc7c541b6d9d7e929c4e5364d2db){
        salary=2 ether;
    }else if(frank==0xdd870fa1b7c4700f2bd7f44238821c26f7392148){
        salary=3 ether;
    }
    }
    
    function calculateRunway() returns (uint) {
        return this.balance/salary;
    }
    function hasEnoughFund() returns (bool) {
       // return this.balance >= salary;
       return calculateRunway() >= 0;
    }
    function getPaid(){
        if(msg.sender!=frank){
            revert();
        }

        uint nextPayDay=lastPayDay+payDuration;
        if (nextPayDay>now){
           revert();
        }
        
        lastPayDay=nextPayDay;
        frank.transfer(salary);
       
    }
}
